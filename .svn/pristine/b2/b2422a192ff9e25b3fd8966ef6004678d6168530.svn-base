@model API.Catalogos.Proveedor

@{
    ViewBag.Title = "Editar";
}

<script src="~/Content/Infodextra/Proveedores.js"></script>

<h2>Editar</h2>

<div class="container-fluid">
    <div class="row">
        <div class="col-xs-12">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.FechaAlta)
                <div class="form">
                    <h4>Proveedor</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })

                    <ul class="nav nav-pills nav-justified">
                        <li class="active">
                            <a data-toggle="tab" href="#mInformacion">Información</a>
                        </li>
                        <li>
                            <a data-toggle="tab" href="#mSucursales">Sucursales</a>
                        </li>
                    </ul>

                    <div class="tab-content" id="myTabContent">
                        <div id="mInformacion" class="tab-pane fade in active">
                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.RazonSocial, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.RazonSocial, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RazonSocial, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Rfc, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Rfc, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Rfc, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.PaginaWeb, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.PaginaWeb, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PaginaWeb, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Telefono1, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Telefono1, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Telefono1, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Telefono2, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Telefono2, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Telefono2, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Saldo, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Saldo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Saldo, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                                @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.CodigoPostal, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.CodigoPostal, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CodigoPostal, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Pais, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Pais, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Pais, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                                @Html.LabelFor(model => model.Referencia, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Referencia, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div id="mSucursales" class="tab-pane fade">
                            <div class="panel panel-primary">
                                <div class="panel-heading">
                                    Sucursales
                                </div>

                                <div class="panel-body">
                                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                        <div class="form-group col-xs-9 col-sm-9 col-md-9 col-lg-9">
                                            <label class="control-label">Sucursal</label>
                                            @Html.DropDownList("SucursalId", null, "Favor de hacer su selección", new { @class = "form-control select2" })
                                            @Html.ValidationMessageFor(model => model.Sucursal.Id, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-xs-1 col-sm-1 col-md-1 col-lg-1">
                                            <label class="control-label">Agregar</label> <br />
                                            <div id="agregarSucursal" style="cursor:pointer">
                                                <span class="fa fa-plus-circle fa-2x text-success"></span>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="clearfix"></div>
                                    <div class="col-xs-12">
                                        <div class="panel panel-success fresh-color">
                                            <div class="panel-heading">
                                                <div class="panel-title">
                                                    Sucursales asignadas
                                                </div>
                                            </div>
                                            <div class="panel-body">
                                                <div class="row no-margin-bottom center">
                                                    <div class="col-xs-11 col-sm-11 col-md-11 col-lg-11">
                                                        <b>Sucursal</b>
                                                    </div>
                                                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1">
                                                        <b>Remover</b>
                                                    </div>
                                                </div>
                                                <div>
                                                    <div class="row" id="sucursales">
                                                        @if (Model.Sucursales != null)
                                                        {
                                                            foreach (var detalle in Model.Sucursales)
                                                            {
                                                                @Html.Partial("~/Views/Proveedores/Sucursales.cshtml", detalle)
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <div class="clearfix"></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="clearfix"></div>
                    <hr />
                    <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 pull-right">
                        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-primary" })
                        <button type="submit" class="btn btn-success">Guardar</button>
                    </div>
                </div>
            }
        </div>
    </div>
</div>