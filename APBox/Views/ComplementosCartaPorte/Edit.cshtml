@model API.Operaciones.ComplementoCartaPorte.ComplementoCartaPorte
@{
    ViewBag.Title = "Edit";
}
@Html.Partial("_ComplementoCartaPorteScript")
<div id="page-title">
    <h2>Editar Complemento de Carta Porte</h2>
</div>

<div class="panel">
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()


            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.Generado)
            @Html.HiddenFor(model => model.SucursalId)
            @Html.HiddenFor(model => model.IDCliente)
            @Html.HiddenFor(model => model.IdFormaPago)
            @Html.HiddenFor(model => model.IdTipoRelacion)
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.FacturaEmitidaId)
            @Html.HiddenFor(model => model.Mercancias_Id)
            @Html.HiddenFor(model => model.Mercancias.Id)
            @Html.HiddenFor(model => model.TotalImpuestoTrasladado)
            @Html.HiddenFor(model => model.TotalImpuestoRetenidos)
            
            if (Model.Mercancias.AutoTransporte != null && Model.Mercancias.AutoTransporte_Id != null)
            {
                @Html.HiddenFor(model => model.Mercancias.AutoTransporte_Id)
                @Html.HiddenFor(model => model.Mercancias.AutoTransporte.Id)
                @Html.HiddenFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular_Id)
                @Html.HiddenFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.Id)
                @Html.HiddenFor(model => model.Mercancias.AutoTransporte.Seguros_Id)
                @Html.HiddenFor(model => model.Mercancias.AutoTransporte.Seguros.Id)
            }
            if (Model.Mercancias.TransporteMaritimo != null && Model.Mercancias.TransporteMaritimo_Id != null)
            {
                @Html.HiddenFor(model => model.Mercancias.TransporteMaritimo_Id)
                @Html.HiddenFor(model => model.Mercancias.TransporteMaritimo.Id)
            }
            if (Model.Mercancias.TransporteAereo != null && Model.Mercancias.TransporteAereo_Id != null)
            {
                @Html.HiddenFor(model => model.Mercancias.TransporteAereo_Id)
                @Html.HiddenFor(model => model.Mercancias.TransporteAereo.Id)
            }
            if (Model.Mercancias.TransporteFerroviario != null && Model.Mercancias.TransporteFerroviario_Id != null)
            {
                @Html.HiddenFor(model => model.Mercancias.TransporteFerroviario_Id)
                @Html.HiddenFor(model => model.Mercancias.TransporteFerroviario.Id)
            }


            <div class="form">
                <ul class="nav nav-tabs">
                    <li class="active"><a href="#tab0" data-toggle="tab">Comprobante</a></li>
                    <li><a href="#tab1" data-toggle="tab">Receptor</a></li>
                    <li><a href="#tab2" data-toggle="tab">CFDI Relacionado</a></li>
                    <li><a href="#tab3" data-toggle="tab">Conceptos</a></li>
                    <li><a href="#tab4" data-toggle="tab">Carta Porte</a></li>
                    <li><a href="#tab5" data-toggle="tab">Ubicaciones</a></li>
                    <li><a href="#tab6" data-toggle="tab" class="getMercancias">Mercancías</a></li>
                    <li><a href="#tab7" data-toggle="tab">Transporte</a></li>
                    <li><a href="#tab8" data-toggle="tab">Figura Transporte</a></li>

                </ul>
                @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })
                @{

                    string activaCampos = "hidden";
                    string ActCampTransInterc = "hidden";
                    string ActCamposMatPeligroso = "hidden";
                    string ActTransporte = "hidden";
                    string ActTransporteMaritimo = "hidden";
                    string ActTransporteAereo = "hidden";
                    string ActTransporteFerroviario = "hidden";
                    string ActDimension = "hidden";
                    string ActParteTransporte = "hidden";
                    string ActCampoUbicacionExtranjero = "hidden";
                    string ActFormPedimento = "hidden";
                    string ActFormCantidadTransportada = "hidden";
                    string ActFracArancelaria = "hidden";
                    string ActPesoMercancia = "hidden";
                    string ActvCargoTasacion = "hidden";
                    string ActNumEstacion = "hidden";


                    if (Model.hidden)
                    {
                        activaCampos = "visible";
                    }
                    else
                    {
                        activaCampos = "hidden";
                    }
                    if (Model.TranspInternac) { ActCampTransInterc = "visible"; } else { ActCampTransInterc = "hidden"; }
                    if (Model.Mercancias.Mercancia.MaterialPeligrosos) { ActCamposMatPeligroso = "visible"; } else { ActCamposMatPeligroso = "hidden"; }
                    if (Model.ClaveTransporteId == "01") { ActTransporte = "visible"; } else { ActTransporte = "hidden"; }
                    if (Model.ClaveTransporteId == "02") { ActTransporteMaritimo = "visible"; } else { ActTransporteMaritimo = "hidden"; }
                    if (Model.ClaveTransporteId == "03") { ActTransporteAereo = "visible"; } else { ActTransporteAereo = "hidden"; }
                    if (Model.ClaveTransporteId == "04") { ActTransporteFerroviario = "visible"; } else { ActTransporteFerroviario = "hidden"; }
                    if (Model.ClaveTransporteId == "02") { ActDimension = "visible"; } else { ActDimension = "hidden"; }
                    if (Model.TiposFigura.FiguraTransporte == "02" || Model.TiposFigura.FiguraTransporte == "03") { ActParteTransporte = "visible"; } else { ActParteTransporte = "hidden"; }
                    if (Model.Ubicacion.RfcRemitenteDestinatario == "XEXX010101000") { ActCampoUbicacionExtranjero = "visible"; } else { ActCampoUbicacionExtranjero = "hidden"; }
                    if ((Model.ClaveTransporteId == "01" && Model.TranspInternac) || (Model.ClaveTransporteId == "03" && Model.TranspInternac)) { ActFormPedimento = "visible"; } else { ActFormPedimento = "hidden"; }
                    if ((Model.ClaveTransporteId == "01" && Model.TranspInternac) || (Model.ClaveTransporteId == "04" && Model.TranspInternac) || (Model.ClaveTransporteId == "04" && !Model.TranspInternac)) { ActFormCantidadTransportada = "visible"; } else { ActFormCantidadTransportada = "hidden"; }
                    if (Model.ClaveTransporteId == "01" && Model.TranspInternac) { ActFracArancelaria = "visible"; } else { ActFracArancelaria = "hidden"; }
                    if (Model.ClaveTransporteId == "02" || Model.ClaveTransporteId == "04") { ActPesoMercancia = "visible"; } else { ActPesoMercancia = "hidden"; }
                    if (Model.ClaveTransporteId == "03") { ActvCargoTasacion = "visible"; } else { ActvCargoTasacion = "hidden"; }
                    if (Model.ClaveTransporteId != "01") { ActNumEstacion = "visible"; } else { ActNumEstacion = "hidden"; }

                }
                <div class="tab-content">
                    <div class="tab-pane active" id="tab0">
                        <div class="row">
                            <h3 class="title-hero">
                                Información de la Sección de Comprobante
                            </h3>
                            <div class="row">
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label", })
                                    @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.FechaDocumento, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.FechaDocumento, new { htmlAttributes = new { @class = "form-control date" } })
                                    @Html.ValidationMessageFor(model => model.FechaDocumento, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Hora, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Hora, new { htmlAttributes = new { @class = "form-control time" } })
                                    @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.TipoDeComprobante, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownList("TipoDecomprobante", null, new { @class = "form-control", @id = "tipoComprobante" })
                                    @Html.ValidationMessageFor(model => model.TipoDeComprobante, "Comprobante no puede ir vacío", new { @class = "text-danger" })

                                </div>



                            </div>

                            <div id="validaTipoComprobante" @activaCampos>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.FormaPago, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.FormaPago, (IEnumerable<SelectListItem>)ViewBag.FormaPAgo, "Favor de hacer su selección", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.FormaPago, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.MetodoPago, htmlAttributes: new { @class = "control-label" })
                                    @Html.EnumDropDownListSpecialFor(model => model.MetodoPago)
                                    @Html.ValidationMessageFor(model => model.MetodoPago, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.TipoCambio, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.TipoCambio, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.TipoCambio, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.CondicionesPago, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CondicionesPago, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CondicionesPago, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2" id="moneda">
                                    @Html.LabelFor(model => model.Moneda, htmlAttributes: new { @class = "control-label" })
                                    @Html.EnumDropDownListSpecialFor(model => model.Moneda)
                                    @Html.ValidationMessageFor(model => model.Moneda, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Subtotal, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Subtotal, new { htmlAttributes = new { @class = "form-control", @id = "subtotal" } })
                                    @Html.ValidationMessageFor(model => model.Subtotal, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @class = "form-control", @id = "total", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    @*<hr />*@
                    <div class="tab-pane" id="tab1">
                        <h3 class="title-hero">
                            Sección Receptor
                        </h3>
                        <div class="row">
                            <i class="col-xs-12 InformacionReceptor"></i>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.ReceptorId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("ReceptorId", null, "Favor de hacer su selección", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ReceptorId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.UsoCfdiCP, htmlAttributes: new { @class = "control-label" })
                                @* @Html.DropDownList("UsoCfdi", null, "Favor de hacer su selección", new { @class = "form-control" })*@
                                @Html.EnumDropDownListSpecialFor(model => model.UsoCfdiCP)
                                @Html.ValidationMessageFor(model => model.UsoCfdiCP, "", new { @class = "text-danger" })
                            </div>

                        </div>
                    </div>

                    <div class="clearfix"></div>

                    <div class="row tab-pane" id="tab2">
                        <div class="form-group col-xs-12 col-sm-6 col-md-6">
                            <div class="checkbox">
                                <input type="checkbox" class="cfdiRelacionado" />
                                <label class="control-label">Relacionar CFDi Cancelado</label>
                            </div>
                        </div>


                        <div class="clearfix"></div>

                        <div class="cfdiRelacionadoSeccion" hidden>
                            <h3 class="title-hero">
                                CFDI Relacionado
                            </h3>

                            <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                @Html.LabelFor(model => model.TipoRelacion, new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.TipoRelacion, (IEnumerable<SelectListItem>)ViewBag.tipoRelacion, "Favor de hacer su selección", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TipoRelacion, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                @Html.LabelFor(model => model.UUIDCfdiRelacionado, new { @class = "control-label" })
                                @Html.EditorFor(model => model.UUIDCfdiRelacionado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UUIDCfdiRelacionado, "", new { @class = "text-danger" })
                                <div id="UUIDRelacionadoText" style="color:red;"></div>
                            </div>

                            <div class="clearfix"></div>

                        </div>

                    </div>

                    <div class="clearfix"></div>
                   
                    <div class="tab-pane" id="tab3">
                        <div class="row">

                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Conceptos
                                    <div class="header-buttons-separator disableConceptos" disabled="true">
                                        <a href="#" class="icon-separator" id="agregarDetalleConceptos">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>
                                <h3 class="title-hero">
                                    Sección Conceptos
                                </h3>


                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.CatConcepto, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.Conceptos.CatConcepto, (IEnumerable<SelectListItem>)ViewBag.Conceptos, "Favor de hacer su selección", new { @class = "form-control", @id = "CConcepto" })
                                    @Html.ValidationMessageFor(model => model.Conceptos.CatConcepto, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.ClavesProdServ, htmlAttributes: new { @class = "control-label" })
                                    @* @Html.DropDownListFor(model => model.Conceptos.ClavesProdServ, (IEnumerable<SelectListItem>)ViewBag.ProductoSerCPList, "Favor de hacer su selección", new { @class = "form-control" })*@

                                    @Html.EditorFor(model => model.Conceptos.ClavesProdServ, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.ClavesProdServ, "", new { @class = "text-danger" })
                                    <div id="ClaveProdServCPConceptos" style="color:red;"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.ClavesUnidad, htmlAttributes: new { @class = "control-label" })
                                    @*@Html.DropDownListFor(model => model.Conceptos.ClavesUnidad, (IEnumerable<SelectListItem>)ViewBag.ClaveUnidadList, "Favor de hacer su selección", new { @class = "form-control" })*@

                                    @Html.EditorFor(model => model.Conceptos.ClavesUnidad, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.ClavesUnidad, "", new { @class = "text-danger" })
                                    <div id="ClaveUnidadConcepto" style="color:red;"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.Unidad, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Conceptos.Unidad, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.Unidad, "", new { @class = "text-danger" })
                                    <div id="ClaveUnidadConcepto" style="color:red;"></div>
                                </div>

                                <div class="clearfix"></div>

                                <div class="form-group col-xs-12 col-sm-6 col-md-6">
                                    @Html.LabelFor(model => model.Conceptos.Descripcion, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Conceptos.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.Descripcion, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.NoIdentificacion, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Conceptos.NoIdentificacion, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.NoIdentificacion, "", new { @class = "text-danger" })
                                    <div id="ClaveUnidadConcepto" style="color:red;"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.Cantidad, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Conceptos.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.Cantidad, "", new { @class = "text-danger" })
                                    <div id="ClaveUnidadConcepto" style="color:red;"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.ValorUnitario, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Conceptos.ValorUnitario, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.ValorUnitario, "", new { @class = "text-danger" })
                                    <div id="ClaveUnidadConcepto" style="color:red;"></div>
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.Conceptos.Importe, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Conceptos.Importe, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Conceptos.Importe, "", new { @class = "text-danger" })
                                    <div id="ClaveUnidadConcepto" style="color:red;"></div>
                                </div>

                                <div class="clearfix"></div>
                                <hr />

                                <div id="activaImpuesto" @activaCampos>
                                    @*<div class="row">*@
                                    <h3 class="title-hero">
                                        Subsección Impuestos : Traslado
                                    </h3>
                                    @*<div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Traslado.CatImpuesto, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Conceptos.Traslado.CatImpuesto, (IEnumerable<SelectListItem>)ViewBag.ImpuestoT, "Favor de hacer su selección", new { @class = "form-control", @id = "CImpuestoT" })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.CatImpuesto, "", new { @class = "text-danger" })
                                    </div>*@
                                    @Html.HiddenFor(model => model.Conceptos.Traslado.TipoImpuesto)
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Traslado.BasePorcentaje, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Traslado.BasePorcentaje, new { htmlAttributes = new { @class = "form-control", @id = "TBaseP" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.BasePorcentaje, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Traslado.Base, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Traslado.Base, new { htmlAttributes = new { @class = "form-control", @id = "TBase" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.Base, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Traslado.Impuesto, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Conceptos.Traslado.Impuesto, (IEnumerable<SelectListItem>)ViewBag.ImpuestoSat, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.Impuesto, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Traslado.TipoFactor, htmlAttributes: new { @class = "control-label" })
                                        @Html.EnumDropDownListSpecialFor(model => model.Conceptos.Traslado.TipoFactor)
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.TipoFactor, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Traslado.TasaOCuota, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Traslado.TasaOCuota, new { htmlAttributes = new { @class = "form-control", @id = "TTasaOCuota" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.TasaOCuota, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Traslado.Importe, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Traslado.Importe, new { htmlAttributes = new { @class = "form-control", @id = "TImporte", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.Importe, "", new { @class = "text-danger" })
                                    </div>
                                    @*<div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        <label>Total de Impuestos Trasladados</label>
                                        @Html.EditorFor(model => model.Conceptos.Traslado.TotalImpuestosTR, new { htmlAttributes = new { @class = "form-control", @id = "TTotal", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Traslado.TotalImpuestosTR, "", new { @class = "text-danger" })
                                    </div>*@
                                    <div class="clearfix"></div>
                                    <hr />
                                    <br />
                                    <br />
                                    <h3 class="title-hero">
                                        Subsección Impuestos : Retencion
                                    </h3>
                                    @*<div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Retencion.CatImpuesto, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Conceptos.Retencion.CatImpuesto, (IEnumerable<SelectListItem>)ViewBag.ImpuestoR, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.CatImpuesto, "", new { @class = "text-danger" })
                                    </div>*@
                                    @Html.HiddenFor(model => model.Conceptos.Retencion.TipoImpuesto)
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Retencion.BasePorcentaje, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Retencion.BasePorcentaje, new { htmlAttributes = new { @class = "form-control", @id = "RBaseP" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.BasePorcentaje, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Retencion.Base, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Retencion.Base, new { htmlAttributes = new { @class = "form-control", @id = "RBase" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.Base, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Retencion.Impuesto, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Conceptos.Retencion.Impuesto, (IEnumerable<SelectListItem>)ViewBag.ImpuestoSat, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.Impuesto, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Retencion.TipoFactor, htmlAttributes: new { @class = "control-label" })
                                        @Html.EnumDropDownListSpecialFor(model => model.Conceptos.Retencion.TipoFactor)
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.TipoFactor, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Retencion.TasaOCuota, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Retencion.TasaOCuota, new { htmlAttributes = new { @class = "form-control", @id = "RTasaOCuota" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.TasaOCuota, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.LabelFor(model => model.Conceptos.Retencion.Importe, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Conceptos.Retencion.Importe, new { htmlAttributes = new { @class = "form-control", @id = "RImporte", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.Importe, "", new { @class = "text-danger" })
                                    </div>
                                    @*<div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        <label>Total de Impuestos Retenidos</label>
                                        @Html.EditorFor(model => model.Conceptos.Retencion.TotalImpuestosTR, new { htmlAttributes = new { @class = "form-control", @id = "RTotal", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Conceptos.Retencion.TotalImpuestosTR, "", new { @class = "text-danger" })
                                    </div>*@
                                    @*</div>*@
                                </div>
                                <div class="clearfix"></div>

                                <div class="col-xs-12">
                                    <div class="content-box">
                                        <h3 class="content-box-header bg-default">
                                            <i class="glyph-icon icon-inbox"></i>
                                            Conceptos Agregados
                                            <span class="contadorConceptos font-blue">

                                            </span>
                                        </h3>
                                        <div class="content-box-wrapper">
                                            <div>
                                                <div class="row" id="detallesConceptos">
                                                    @if (Model.Conceptoss != null)
                                                    {
                                                        foreach (var conceptos in Model.Conceptoss)
                                                        {
                                                            @Html.Partial("~/Views/ComplementosCartaPorte/Conceptos.cshtml", conceptos)
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </div>

                    @* <hr />*@
                    <div class="tab-pane" id="tab4">
                        <div class="clearfix"></div>
                        <div class="row">
                            <h3 class="title-hero">
                                Complemento Cartaporte
                            </h3>
                            <div class="row">
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.LabelFor(model => model.ClaveTransporteId, htmlAttributes: new { @class = "control-label" })
                                    @Html.DropDownListFor(model => model.ClaveTransporteId, (IEnumerable<SelectListItem>)ViewBag.ClavesTransporte, "Favor de hacer su selección", new { @class = "form-control", @id = "claveTransporteId" })
                                    @Html.ValidationMessageFor(model => model.ClaveTransporteId, "", new { @class = "text-danger" })
                                </div>
                                <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                    @Html.CheckBoxFor(model => model.TranspInternac, new { @class = "ActivaCheckTransInter" })
                                    @Html.LabelFor(model => model.TranspInternac, htmlAttributes: new { @class = "control-label" })

                                    @Html.ValidationMessageFor(model => model.TranspInternac, "", new { @class = "text-danger" })
                                </div>
                                <div class="divValidaTransInternc" @ActCampTransInterc>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2 ">

                                        @Html.LabelFor(model => model.EntradaSalidaMerc, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.EntradaSalidaMerc, (IEnumerable<SelectListItem>)ViewBag.EntradaSMercancia, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.EntradaSalidaMerc, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.PaisOrigendestino, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.PaisOrigendestino, (IEnumerable<SelectListItem>)ViewBag.Paises, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PaisOrigendestino, "", new { @class = "text-danger" })
                                        <div id="UPais" style="color:red;"></div>
                                    </div>

                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.viaEntradaSalida, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.viaEntradaSalida, (IEnumerable<SelectListItem>)ViewBag.ClavesTransporte, "Favor de hacer su selección", new { @class = "form-control", @id = "ClaveTransporteCP" })
                                        @Html.ValidationMessageFor(model => model.viaEntradaSalida, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3" @*hidden /*id="TotalDistRec"*@>
                                        @Html.LabelFor(model => model.TotalDistRec, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.TotalDistRec, new { htmlAttributes = new { @class = "form-control", @id = "TotalDistRecorridas", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.TotalDistRec, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                    @*<hr />*@

                    <div class="tab-pane" id="tab5">
                        <div class="row">

                            <h3 class="title-hero">
                                Ubicaciones
                            </h3>
                            <div class="form-group col-xs-12 col-sm-3">
                                @Html.LabelFor(model => model.Ubicacion.TipoUbicacion, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Ubicacion.TipoUbicacion, (IEnumerable<SelectListItem>)ViewBag.TipoUbicacion, "Favor de hacer su selección", new { @class = "form-control", @id = "TipoUbicacionRD" })
                                @Html.ValidationMessageFor(model => model.Ubicacion.TipoUbicacion, "", new { @class = "text-danger" })

                            </div>
                            <br /><br /><br /><br />
                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Ubicacion
                                    <div class="header-buttons-separator">
                                        <a href="#" class="icon-separator" id="agregarDetalleUbicacion">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>

                                <div class="clearfix"></div>
                                @*<hr />*@

                                <div class="content-box-wrapper">
                                    <h3 class="title-hero origenTitulo">
                                        Ubicación: Origen
                                    </h3>
                                    <h3 class="title-hero destinoTitulo" hidden>
                                        Ubicación: Destino
                                    </h3>
                                    <div class="clearfix"></div>
                                    <div class="row">
                                        <div class="form-group col-xs-12 col-sm-3">
                                            @Html.LabelFor(model => model.Ubicacion.IDUbicacion, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Ubicacion.IDUbicacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Ubicacion.IDUbicacion, "", new { @class = "text-danger" })

                                        </div>

                                        <div class="form-group col-xs-12 col-sm-3 ">
                                            @Html.LabelFor(model => model.Ubicacion.RfcRemitenteDestinatario, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Ubicacion.RfcRemitenteDestinatario, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Ubicacion.RfcRemitenteDestinatario, "", new { @class = "text-danger" })
                                            <span id="RfcRemitente" style="color:red;"></span>
                                        </div>

                                        <div class="form-group col-xs-12 col-sm-3">
                                            @Html.LabelFor(model => model.Ubicacion.NombreRemitenteDestinatario, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Ubicacion.NombreRemitenteDestinatario, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Ubicacion.NombreRemitenteDestinatario, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="activaCamposRFCExtranjero" @ActCampoUbicacionExtranjero>
                                            <div class="form-group col-xs-12 col-sm-3">
                                                @Html.LabelFor(model => model.Ubicacion.NumRegIdTrib, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Ubicacion.NumRegIdTrib, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Ubicacion.NumRegIdTrib, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group col-xs-12 col-sm-3">
                                                @Html.LabelFor(model => model.Ubicacion.ResidenciaFiscal, htmlAttributes: new { @class = "control-label" })
                                                @Html.EnumDropDownListSpecialFor(model => model.Ubicacion.ResidenciaFiscal)
                                                @Html.ValidationMessageFor(model => model.Ubicacion.ResidenciaFiscal, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>

                                    <div class="form-group col-xs-12 col-sm-3" @ActTransporteMaritimo id="DivEstacionMaritimo">
                                        @Html.LabelFor(model => model.Ubicacion.NombreEstacion, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownList("NombreEstacionMaritimo", null, "Favor de hacer su selección", new { @class = "form-control NombreEstacion" })
                                        @Html.ValidationMessageFor(model => model.Ubicacion.NombreEstacion, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3" @ActTransporteAereo id="DivEstacionAereo">
                                        @Html.LabelFor(model => model.Ubicacion.NombreEstacion, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownList("NombreEstacionAereo", null, "Favor de hacer su selección", new { @class = "form-control NombreEstacion" })
                                        @Html.ValidationMessageFor(model => model.Ubicacion.NombreEstacion, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3" @ActTransporteFerroviario id="DivEstacionFerroviario">
                                        @Html.LabelFor(model => model.Ubicacion.NombreEstacion, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownList("NombreEstacionFerroviario", null, "Favor de hacer su selección", new { @class = "form-control NombreEstacion" })
                                        @Html.ValidationMessageFor(model => model.Ubicacion.NombreEstacion, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3" id="DivNumEstacion" @ActNumEstacion>
                                        @Html.LabelFor(model => model.Ubicacion.NumEstacion, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Ubicacion.NumEstacion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "NumEstacion" } })
                                        @Html.ValidationMessageFor(model => model.Ubicacion.NumEstacion, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3" id="DivNavegacionTrafico" @ActDimension>
                                        @Html.LabelFor(model => model.Ubicacion.NavegacionTrafico, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Ubicacion.NavegacionTrafico, (IEnumerable<SelectListItem>)ViewBag.TipoNavegacionTrafico, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Ubicacion.NavegacionTrafico, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Ubicacion.FechaHoraSalidaLlegada, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Ubicacion.FechaHoraSalidaLlegada, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                                        @Html.ValidationMessageFor(model => model.Ubicacion.FechaHoraSalidaLlegada, "", new { @class = "text-danger" })
                                        <div id="FechaHoraSalida" style="color:red;"></div>
                                    </div>
                                    <div class="activaTipoEstacion" @ActNumEstacion>
                                        <div class=" form-group col-xs-12 col-sm-3">
                                            @Html.LabelFor(model => model.Ubicacion.TipoEstacion_Id, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownList("TipoEstacion", null, "Favor de hacer su selección", new { @class = "form-control", @id = "UTipoEstacion" })
                                            @Html.ValidationMessageFor(model => model.Ubicacion.TipoEstacion_Id, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3 activaDR" hidden>
                                        @Html.LabelFor(model => model.Ubicacion.DistanciaRecorrida, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Ubicacion.DistanciaRecorrida, new { htmlAttributes = new { @class = "form-control", @id = "DistanciaRO" } })
                                        @Html.ValidationMessageFor(model => model.Ubicacion.DistanciaRecorrida, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="clearfix"></div>


                                    <h3 class="title-hero origenDomicilio">
                                        Ubicación Origen : Domicilio
                                    </h3>
                                    <h3 class="title-hero destinoDomicilio" hidden>
                                        Ubicación Destino : Domicilio
                                    </h3>
                                    @Html.Partial("~/Views/ComplementosCartaporte/Domicilio.cshtml", Model.Ubicacion.Domicilio, new ViewDataDictionary(ViewData) { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "Ubicacion.Domicilio" } })
                                    <div class="clearfix"></div>

                                    <div class="col-xs-12">
                                        <div class="content-box">
                                            <h3 class="content-box-header bg-default">
                                                <i class="glyph-icon icon-inbox"></i>
                                                Ubicaciones Agregadas
                                                <span class="contadorUbicaciones font-blue">

                                                </span>
                                            </h3>
                                            <div class="content-box-wrapper">
                                                <div>
                                                    <div class="row" id="detalleUbicaciones">
                                                        @if (Model.Ubicaciones != null)
                                                        {
                                                            foreach (var ubicacion in Model.Ubicaciones)
                                                            {

                                                                @Html.Partial("~/Views/ComplementosCartaPorte/Ubicacion.cshtml", ubicacion)
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div class="clearfix"></div>
                    @*<hr />*@

                    <div class="tab-pane" id="tab6">
                        <div class="row">
                            <h3 class="title-hero">
                                Mercancías
                            </h3>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.PesoBrutoTotal, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.PesoBrutoTotal, new { htmlAttributes = new { @class = "form-control pesoBrutoTotalD" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.PesoBrutoTotal, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.ClaveUnidadPeso_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.ClaveUnidadPeso_Id, (IEnumerable<SelectListItem>)ViewBag.ClavesUnidadPeso, "Favor de hacer su selección", new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.Mercancias.ClaveUnidadPeso_Id, "", new { @class = "text-danger" })
                            </div>
                            <div id="activaMercPeso" @ActPesoMercancia>
                                <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                    @Html.LabelFor(model => model.Mercancias.PesoNetoTotal, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.Mercancias.PesoNetoTotal, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.Mercancias.PesoNetoTotal, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3" @ActvCargoTasacion id="DivCargoTasacion">
                                @Html.LabelFor(model => model.Mercancias.CargoPorTasacion, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.CargoPorTasacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.CargoPorTasacion, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.NumTotalMercancias, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.NumTotalMercancias, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.NumTotalMercancias, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="row">
                            <h3 class="title-hero">
                                Mercancía
                            </h3>
                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Mercancía
                                    <div class="header-buttons-separator">
                                        <a href="#" class="icon-separator" id="agregarDetalleMercanciaEdit">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>

                                <div class="clearfix"></div>
                                @*NECESITA UN DROPDOW PARA CLAVEPRODSERVCP Y CLAVEPRODSTCC*@
                                <!--<div class="row">-->
                                <div class="content-box-wrapper">
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.ClaveProdServCP, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.ClaveProdServCP, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.ClaveProdServCP, "", new { @class = "text-danger" })
                                        <div id="ClaveProdServID" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.Descripcion, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.Descripcion, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.Descripcion, "", new { @class = "text-danger" })
                                        <div id="Descripcion" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.Cantidad, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.Cantidad, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.Cantidad, "", new { @class = "text-danger" })
                                        <div id="Cantidad" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3 activaClaveSTCC" hidden>
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.ClaveProdSTCC, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.ClaveProdSTCC, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.ClaveProdSTCC, "", new { @class = "text-danger" })
                                        <div id="ClaveProdSTCC" style="color:red;"></div>
                                    </div>

                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.ClavesUnidad, htmlAttributes: new { @class = "control-label" })

                                        @Html.EditorFor(model => model.Mercancias.Mercancia.ClavesUnidad, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.ClavesUnidad, "", new { @class = "text-danger" })
                                        <div id="ClaveUnidadId" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.Unidad, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.Unidad, new { htmlAttributes = new { @class = "form-control"} })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.Unidad, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group col-xs-12 col-sm-6 col-md-3" @ActDimension id="ActivaDimensiones">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.Dimensiones, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.Dimensiones, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.Dimensiones, "", new { @class = "text-danger" })
                                    </div>

                                    @*<div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.MaterialPeligrosos, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.MaterialPeligrosos, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.MaterialPeligrosos, "", new { @class = "text-danger" })
                                    </div>*@
                                    <div class="form-group col-xs-12 col-sm-6 col-md-2">
                                        @Html.CheckBoxFor(model => model.Mercancias.Mercancia.MaterialPeligrosos)
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.MaterialPeligrosos, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.MaterialPeligrosos, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="ActivaCampoMatPeligroso" @ActCamposMatPeligroso>
                                        <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.ClaveMaterialPeligroso, htmlAttributes: new { @class = "control-label" })
                                            @* @Html.DropDownListFor(model => model.Mercancias.Mercancia.ClaveMaterialPeligroso, (IEnumerable<SelectListItem>)ViewBag.MaterialesPeligroso_Id, "Favor de hacer su selección", new { @class = "form-control " })*@
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.ClaveMaterialPeligroso, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.ClaveMaterialPeligroso, "", new { @class = "text-danger" })
                                            <div id="ClaveMatPeligroso" style="color:red;"></div>
                                        </div>
                                        <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.DescripEmbalaje, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.Mercancias.Mercancia.DescripEmbalaje, (IEnumerable<SelectListItem>)ViewBag.TiposEmbalaje, "Favor de hacer su selección", new { @class = "form-control" })
                                            @* @Html.EditorFor(model => model.Mercancias.Mercancia.DescripEmbalaje, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.DescripEmbalaje, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.TipoEmbalaje_Id, htmlAttributes: new { @class = "control-label" })
                                            @*@Html.DropDownListFor(model => model.Mercancias.Mercancia.TipoEmbalaje_Id, (IEnumerable<SelectListItem>)ViewBag.TiposEmbalaje, "Favor de hacer su selección", new { @class = "form-control" })*@
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.TipoEmbalaje_Id, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.TipoEmbalaje_Id, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.PesoEnKg, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.PesoEnKg, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.PesoEnKg, "", new { @class = "text-danger" })
                                        <div id="PesoEnKg" style="color:red;"></div>
                                    </div>

                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.ValorMercancia, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.ValorMercancia, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.ValorMercancia, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.Moneda, htmlAttributes: new { @class = "control-label" })
                                        @Html.EnumDropDownListSpecialFor(model => model.Mercancias.Mercancia.Moneda)
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.Moneda, "", new { @class = "text-danger" })
                                    </div>
                                    <div @ActFracArancelaria id="activaFraccionArancelaria">
                                        <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.FraccionArancelarias, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.FraccionArancelarias, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.FraccionArancelarias, "", new { @class = "text-danger" })
                                            <div id="ClaveFraccionArancelaria" style="color:red;"></div>
                                        </div>

                                        <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.UUIDComecioExt, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.UUIDComecioExt, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.UUIDComecioExt, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>

                                </div>

                                <!--CHECKBOX PEDIMENTO-->
                                <div class="form-group col-xs-12 col-sm-6 col-md-6">
                                    <div class="checkbox">
                                        <input type="checkbox" class="addPedimento" />
                                        <label class="control-label">Agregar Pedimento</label>
                                    </div>
                                </div>

                                <div class="clearfix"></div>
                                <div class="content-box-wrapper DivPedimento" hidden>
                                    <h3 class="title-hero">
                                        Mercancía : Pedimentos
                                    </h3>
                                    <div class="content-box">
                                        <h3 class="content-box-header bg-blue">
                                            <i class="glyph-icon icon-cog"></i>
                                            Agregar Pedimentos
                                            <div class="header-buttons-separator">
                                                <a href="#" class="icon-separator" id="agregarDetallePedimentos">
                                                    <i class="glyph-icon icon-plus"></i>
                                                </a>
                                            </div>
                                        </h3>

                                        <div class="form-group col-xs-12 col-sm-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.Pedimentos.Pedimento, new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.Pedimentos.Pedimento, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.Pedimentos.Pedimento, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="clearfix"></div>

                                        <div class="col-xs-12">
                                            <div class="content-box">
                                                <h3 class="content-box-header bg-default">
                                                    <i class="glyph-icon icon-inbox"></i>
                                                    Pedimentos Agregadas
                                                    <span class="contadorPedimentos font-blue">

                                                    </span>
                                                </h3>
                                                <div class="content-box-wrapper">
                                                    <div>
                                                        <div class="row" id="detallesPedimentos">
                                                            @if (Model.Pedimentoss != null)
                                                            {
                                                                foreach (var pedimento in Model.Pedimentoss)
                                                                {
                                                                    @Html.Partial("~/Views/ComplementosCartaPorte/Pedimentos.cshtml", pedimento)
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                <!-- CHECKBOX GUIAS IDENTIFICACION-->
                                <div class="form-group col-xs-12 col-sm-6 col-md-6">
                                    <div class="checkbox">
                                        <input type="checkbox" class="addGIdentificacion" />
                                        <label class="control-label">Agregar Guia Identificación</label>
                                    </div>
                                </div>



                                <div class="clearfix"></div>
                                <div class="content-box-wrapper GuiasIdentificacionForm" hidden>
                                    <h3 class="title-hero">
                                        Mercancía : Guias de Identificación
                                    </h3>
                                    <div class="content-box">
                                        <h3 class="content-box-header bg-blue">
                                            <i class="glyph-icon icon-cog"></i>
                                            Agregar Guias de Identificación
                                            <div class="header-buttons-separator">
                                                <a href="#" class="icon-separator" id="agregarDetalleGIdentificacion">
                                                    <i class="glyph-icon icon-plus"></i>
                                                </a>
                                            </div>
                                        </h3>

                                        <div class="form-group col-xs-12 col-sm-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.NumeroGuiaIdentificacion, new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.NumeroGuiaIdentificacion, new { @class = "form-control datetime" })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.NumeroGuiaIdentificacion, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-xs-12 col-sm-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.DescripGuiaIdentificacion, new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.DescripGuiaIdentificacion, new { @class = "form-control datetime" })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.DescripGuiaIdentificacion, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-xs-12 col-sm-3">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.PesoGuiaIdentificacion, new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.PesoGuiaIdentificacion, new { @class = "form-control datetime" })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.GuiasIdentificacion.PesoGuiaIdentificacion, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="clearfix"></div>

                                        <div class="col-xs-12">
                                            <div class="content-box">
                                                <h3 class="content-box-header bg-default">
                                                    <i class="glyph-icon icon-inbox"></i>
                                                    Guias de Identificación Agregadas
                                                    <span class="contadorGIdentificacion font-blue">

                                                    </span>
                                                </h3>
                                                <div class="content-box-wrapper">
                                                    <div>
                                                        <div class="row" id="detallesGIdentificacion">
                                                            @if (Model.GuiasIdentificacioness != null)
                                                            {
                                                                foreach (var GuiaIdentificacion in Model.GuiasIdentificacioness)
                                                                {
                                                                    @Html.Partial("~/Views/ComplementosCartaPorte/GuiasIdentificacion.cshtml", GuiaIdentificacion)
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>


                                @*  CHECKBOX CANTIDAD TRANSPORTADA     *@
                                <div class="form-group col-xs-12 col-sm-6 col-md-6">
                                    <div class="checkbox">
                                        <input type="checkbox" class="addCTransportada" />
                                        <label class="control-label">Agregar Cantidad Transportada</label>
                                    </div>
                                </div>


                                <div class="clearfix"></div>
                                <div class="content-box-wrapper DivCantidadTransportada" hidden>
                                    <h3 class="title-hero">
                                        Mercancía : Cantidad Transportada
                                    </h3>
                                    <div class="content-box">
                                        <h3 class="content-box-header bg-blue">
                                            <i class="glyph-icon icon-cog"></i>
                                            Agregar Cantidad Transportada
                                            <div class="header-buttons-separator">
                                                <a href="#" class="icon-separator" id="agregarDetalleCTransportadas">
                                                    <i class="glyph-icon icon-plus"></i>
                                                </a>
                                            </div>
                                        </h3>


                                        <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.CantidadTransportada.Cantidad, new { @class = "control-label" })
                                            @Html.EditorFor(model => model.Mercancias.Mercancia.CantidadTransportada.Cantidad, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.CantidadTransportada.Cantidad, "", new { @class = "text-danger" })
                                            <div id="CTCantidad" style="color:red;"></div>
                                        </div>
                                        <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.CantidadTransportada.CveTransporte_Id, new { @class = "control-label" })

                                            @Html.DropDownListFor(model => model.Mercancias.Mercancia.CantidadTransportada.CveTransporte_Id, (IEnumerable<SelectListItem>)ViewBag.ClavesTransporte, "Favor de hacer su selección", new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.CantidadTransportada.CveTransporte_Id, "", new { @class = "text-danger" })
                                            <div id="CveTransporteId" style="color:red;"></div>
                                        </div>

                                        <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDOrigen, new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDOrigen, new List<SelectListItem>(), "Favor de hacer su selección", new { @class = "form-control" })
                                            @* @Html.EditorFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDOrigen, new { @class = "form-control " })*@
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDOrigen, "", new { @class = "text-danger" })
                                            <div id="UbicacionOrigenId" style="color:red;"></div>
                                        </div>

                                        <div class="form-group col-xs-12 col-sm-6 col-md-6 col-lg-6">
                                            @Html.LabelFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDDestino, new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDDestino, new List<SelectListItem>(), "Favor de hacer su selección", new { @class = "form-control" })
                                            @*@Html.EditorFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDDestino, new { @class = "form-control " })*@
                                            @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.CantidadTransportada.IDDestino, "", new { @class = "text-danger" })
                                            <div id="UbicacionDestinoId" style="color:red;"></div>
                                        </div>
                                        <div class="clearfix"></div>

                                        <div class="col-xs-12">
                                            <div class="content-box">
                                                <h3 class="content-box-header bg-default">
                                                    <i class="glyph-icon icon-inbox"></i>
                                                    Cantidades Transportadas Agregadas
                                                    <span class="contadorCTransportadas font-blue">

                                                    </span>
                                                </h3>
                                                <div class="content-box-wrapper">
                                                    <div>
                                                        <div class="row" id="detallesCTransportadas">
                                                            @if (Model.CantidadTransportadass != null)
                                                            {
                                                                foreach (var CTransportadas in Model.CantidadTransportadass)
                                                                {
                                                                    @Html.Partial("~/Views/ComplementosCartaPorte/CantidadTransportadas.cshtml", CTransportadas)
                                                                }
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                @*  CHECKBOX DETALLE MERCANCIA     *@
                                <div class="form-group col-xs-12 col-sm-6 col-md-6">
                                    <div class="checkbox">
                                        <input type="checkbox" class="addDMercancia" />
                                        <label class="control-label">Agregar Detalle Mercancia</label>
                                    </div>
                                </div>

                                <div class="clearfix"></div>
                                <div class="content-box-wrapper DivDetalleMercancia" hidden>
                                    <h3 class="title-hero">
                                        Mercancía : Detalles Mercancía
                                    </h3>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.DetalleMercancia.ClaveUnidadPeso_Id, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Mercancias.Mercancia.DetalleMercancia.ClaveUnidadPeso_Id, (IEnumerable<SelectListItem>)ViewBag.ClavesUnidadPeso, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.DetalleMercancia.ClaveUnidadPeso_Id, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoBruto, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoBruto, new { htmlAttributes = new { @class = "form-control", @id = "pesoBruto" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoBruto, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoNeto, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoNeto, new { htmlAttributes = new { @class = "form-control", @id = "pesoNeto" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoNeto, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoTara, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoTara, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @id = "pesoTara" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.DetalleMercancia.PesoTara, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.Mercancia.DetalleMercancia.NumPiezas, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.Mercancia.DetalleMercancia.NumPiezas, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.Mercancia.DetalleMercancia.NumPiezas, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                @*<div class="clearfix"></div>
                                </div>*@
                                @*<div class="clearfix"></div>
                                </div>*@


                                <div class="clearfix"></div>
                                <div class="col-xs-12">
                                    <div class="content-box">
                                        <h3 class="content-box-header bg-default">
                                            <i class="glyph-icon icon-inbox"></i>
                                            Mercancías Agregadas
                                            <span class="contadorMercanciasEdit font-blue">

                                            </span>
                                        </h3>
                                        <div class="content-box-wrapper">
                                            <div>
                                                <div class="row" id="detallesMercancias">
                                                    @if (Model.Mercancias.Mercanciass != null)
                                                    {
                                                        foreach (var mercancia in Model.Mercancias.Mercanciass)
                                                        {
                                                            @Html.Partial("~/Views/ComplementosCartaPorte/MercanciaEdit.cshtml", mercancia)
                                                        }
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </div>
                    <!--</div>-->
                    @**@

                    @**@
                    @*<hr />*@
                    <div class="tab-pane" id="tab7">
                        <div class="clearfix"></div>
                        <div @ActTransporte id="DivAutotransporte">
                            <h3 class="title-hero">
                                Autotransporte
                            </h3>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.TipoPermiso_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.AutoTransporte.TipoPermiso_Id, (IEnumerable<SelectListItem>)ViewBag.TipoPermiso_AT, "Favor de hacer su selección", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.TipoPermiso_Id, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.NumPermisoSCT, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.NumPermisoSCT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.NumPermisoSCT, "", new { @class = "text-danger" })
                            </div>

                            <div class="clearfix"></div>
                            <h3 class="title-hero">
                                Identificación Vehicular
                            </h3>
                            @*AGREGAR DROPDOWS A  CONFIAUTOTRASNPORTE_ID*@
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.ConfigAutotransporte_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.ConfigAutotransporte_Id, (IEnumerable<SelectListItem>)ViewBag.ConfigAutotransporte_Id, "Favor de hacer su selección", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.ConfigAutotransporte_Id, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.PlacaVM, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.PlacaVM, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.PlacaVM, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.AnioModeloVM, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.AnioModeloVM, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.IdentificacionVehicular.AnioModeloVM, "", new { @class = "text-danger" })
                            </div>

                            <div class="clearfix"></div>
                            <h3 class="title-hero">
                                Seguros
                            </h3>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraRespCivil, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraRespCivil, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraRespCivil, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaRespCivil, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaRespCivil, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaRespCivil, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraMedAmbiente, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraMedAmbiente, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraMedAmbiente, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaMedAmbiente, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaMedAmbiente, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaMedAmbiente, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraCarga, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraCarga, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Seguros.AseguraCarga, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaCarga, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaCarga, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Seguros.PolizaCarga, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.AutoTransporte.Seguros.PrimaSeguro, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.AutoTransporte.Seguros.PrimaSeguro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Seguros.PrimaSeguro, "", new { @class = "text-danger" })
                            </div>
                            <div class="clearfix"></div>
                            <h3 class="title-hero">
                                Remolques
                            </h3>

                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Remolque
                                    <div class="header-buttons-separator">
                                        <a href="#" class="icon-separator" id="agregarDetalleRemolqueAuTranspEdit">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>
                                <div class="content-box-wrapper">
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.AutoTransporte.Remolque.SubTipoRem_Id, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Mercancias.AutoTransporte.Remolque.SubTipoRem_Id, (IEnumerable<SelectListItem>)ViewBag.SubTipoRem_Id, "Favor de hacer su selección", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Remolque.SubTipoRem_Id, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                        @Html.LabelFor(model => model.Mercancias.AutoTransporte.Remolque.Placa, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.AutoTransporte.Remolque.Placa, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Mercancias.AutoTransporte.Remolque.Placa, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="clearfix"></div>

                                    <div class="col-xs-12">
                                        <div class="content-box">
                                            <h3 class="content-box-header bg-default">
                                                <i class="glyph-icon icon-inbox"></i>
                                                Remolques Agregados
                                                <span class="contadorRemolquesAuTranspEdit font-blue">

                                                </span>
                                            </h3>
                                            <div class="content-box-wrapper">
                                                <div>
                                                    <div class="row" id="detallesRemolqueAuTransp">
                                                        @if (Model.Mercancias.AutoTransporte != null)
                                                        {
                                                            if (Model.Mercancias.AutoTransporte.Remolquess != null)
                                                            {
                                                                foreach (var remolque in Model.Mercancias.AutoTransporte.Remolquess)
                                                                {
                                                                    @Html.Partial("~/Views/ComplementosCartaPorte/RemolquesEdit.cshtml", remolque)
                                                                }
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>


                        </div>
                        <div class="clearfix"></div>

                        <div @ActTransporteMaritimo id="TransporteMaritimo">
                            <h3 class="title-hero">
                                Transporte Maritimo
                            </h3>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.TipoPermiso_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteMaritimo.TipoPermiso_Id, (IEnumerable<SelectListItem>)ViewBag.TipoPermiso_M, "Favor de hacer su selección", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.TipoPermiso_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NumPermisoSCT, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NumPermisoSCT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NumPermisoSCT, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NombreAseg, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NombreAseg, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NombreAseg, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NumPolizaSeguro, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NumPolizaSeguro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NumPolizaSeguro, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.ConfigMaritima_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteMaritimo.ConfigMaritima_Id, (IEnumerable<SelectListItem>)ViewBag.ConfigMaritima_Id, "Favor de hacer su selección", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.ConfigMaritima_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.Matricula, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.Matricula, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.Matricula, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NumeroOMI, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NumeroOMI, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NumeroOMI, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.AnioEmbarcacion, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.AnioEmbarcacion, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.AnioEmbarcacion, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NombreEmbarc, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NombreEmbarc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NombreEmbarc, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NacionalidadEmbarc, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteMaritimo.NacionalidadEmbarc, (IEnumerable<SelectListItem>)ViewBag.Paises, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NacionalidadEmbarc, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.UnidadesDeArqBruto, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.UnidadesDeArqBruto, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.UnidadesDeArqBruto, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.ClaveTipoCarga_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteMaritimo.ClaveTipoCarga_Id, (IEnumerable<SelectListItem>)ViewBag.ClaveTipoCarga_Id, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.ClaveTipoCarga_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NumCerITC, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NumCerITC, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NumCerITC, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.Eslora, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.Eslora, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.Eslora, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.Manga, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.Manga, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.Manga, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.Calado, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.Calado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.Calado, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.LineaNaviera, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.LineaNaviera, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.LineaNaviera, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NombreAgenteNaviero, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NombreAgenteNaviero, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NombreAgenteNaviero, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NumAutorizacionNaviero_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteMaritimo.NumAutorizacionNaviero_Id, (IEnumerable<SelectListItem>)ViewBag.NumAutorizacionNaviero_Id, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NumAutorizacionNaviero_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NumViaje, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NumViaje, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NumViaje, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.NumConocEmbarc, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.NumConocEmbarc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.NumConocEmbarc, "", new { @class = "text-danger" })
                            </div>

                            <div class="clearfix"></div>

                            <h3 class="title-hero">
                                Contenedor
                            </h3>
                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Contenedor
                                    <div class="header-buttons-separator">
                                        <a href="#" class="icon-separator" id="agregarDetalleTMContenedorEdit">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>
                                <div class="content-box-wrapper">
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.MatriculaContenedor, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.MatriculaContenedor, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.MatriculaContenedor, "", new { @class = "text-danger" })
                                        <div id="MatContenedor" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.ContenedorMaritimo_Id, new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.ContenedorMaritimo_Id, (IEnumerable<SelectListItem>)ViewBag.ContenedorMaritimo_Id, new { @class = "form-control", @id = "contenedorMaritimo" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.ContenedorMaritimo_Id, "", new { @class = "text-danger" })
                                        <div id="ContenedorMaritId" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.NumPrecinto, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.NumPrecinto, new { @class = "form-control datetime" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteMaritimo.ContenedorM.NumPrecinto, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="clearfix"></div>

                                    <div class="col-xs-12">
                                        <div class="content-box">
                                            <h3 class="content-box-header bg-default">
                                                <i class="glyph-icon icon-inbox"></i>
                                                Contenedores Agregados
                                                <span class="contadorTMContenedorEdit font-blue">

                                                </span>
                                            </h3>
                                            <div class="content-box-wrapper">
                                                <div>
                                                    <div class="row" id="detallesTMContenedor">
                                                        @if (Model.Mercancias.TransporteMaritimo != null)
                                                        {
                                                            if (Model.Mercancias.TransporteMaritimo.ContenedoresM != null)
                                                            {
                                                                foreach (var contenedoresM in Model.Mercancias.TransporteMaritimo.ContenedoresM)
                                                                {
                                                                    @Html.Partial("~/Views/ComplementosCartaPorte/ContenedoresMEdit.cshtml", contenedoresM)
                                                                }
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                        </div>

                        <div class="clearfix"></div>

                        <div @ActTransporteAereo id="TransporteAereo">
                            <h3 class="title-hero">
                                Transporte Aéreo
                            </h3>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.TipoPermiso_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteAereo.TipoPermiso_Id, (IEnumerable<SelectListItem>)ViewBag.TipoPermiso_A, "Favor de hacer su selección", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.TipoPermiso_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NumPermisoSCT, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NumPermisoSCT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NumPermisoSCT, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.MatriculaAereonave, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.MatriculaAereonave, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.MatriculaAereonave, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NombreAseg, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NombreAseg, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NombreAseg, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NumPolizaSeguro, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NumPolizaSeguro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NumPolizaSeguro, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NumeroGuia, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NumeroGuia, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NumeroGuia, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.LugarContrato, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.LugarContrato, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.LugarContrato, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.RFCEmbarcador, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.RFCEmbarcador, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.RFCEmbarcador, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.CodigoTransporteAereo_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteAereo.CodigoTransporteAereo_Id, (IEnumerable<SelectListItem>)ViewBag.CodigoTransporteAereo_Id, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.CodigoTransporteAereo_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NumRegIdTribEmbarc, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NumRegIdTribEmbarc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NumRegIdTribEmbarc, "", new { @class = "text-danger" })
                            </div>
                            @*<div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.PaisT, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.PaisT, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.PaisT, "", new { @class = "text-danger" })
                            </div>*@
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.ResidenciaFiscalEmbarc, htmlAttributes: new { @class = "control-label" })
                                @Html.EnumDropDownListSpecialFor(model => model.Mercancias.TransporteAereo.ResidenciaFiscalEmbarc)
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.ResidenciaFiscalEmbarc, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NombreEmbarcador, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NombreEmbarcador, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NombreEmbarcador, "", new { @class = "text-danger" })
                            </div>
                            @*<div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.RFCEmbarcador, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.RFCEmbarcador, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.RFCEmbarcador, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NumRegIdTribEmbarc, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NumRegIdTribEmbarc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NumRegIdTribEmbarc, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.PaisE, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.PaisE, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.PaisE, "", new { @class = "text-danger" })*/
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.ResidenciaFiscalEmbarc, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.ResidenciaFiscalEmbarc, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.ResidenciaFiscalEmbarc, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteAereo.NombreEmbarcador, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteAereo.NombreEmbarcador, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteAereo.NombreEmbarcador, "", new { @class = "text-danger" })
                            </div>*@

                        </div>

                        <div class="clearfix"></div>

                        <div @ActTransporteFerroviario id="TransporteFerroviario">
                            <h3 class="title-hero">
                                Transporte Ferroviario
                            </h3>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.TipoDeServicio_Id, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownListFor(model => model.Mercancias.TransporteFerroviario.TipoDeServicio_Id, (IEnumerable<SelectListItem>)ViewBag.TipoDeServicio_Id, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.TipoDeServicio_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.TipoDeTrafico, htmlAttributes: new { @class = "control-label" })
                                @Html.EnumDropDownListSpecialFor(model => model.Mercancias.TransporteFerroviario.TipoDeTrafico)
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.TipoDeTrafico, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.NombreAseg, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.NombreAseg, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.NombreAseg, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group col-xs-12 col-sm-6 col-md-3">
                                @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.NumPolizaSeguro, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.NumPolizaSeguro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.NumPolizaSeguro, "", new { @class = "text-danger" })
                            </div>

                            <div class="clearfix"></div>

                            <h3 class="title-hero">
                                Derechos de Paso
                            </h3>
                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Derechos de Paso
                                    <div class="header-buttons-separator">
                                        <a href="#" class="icon-separator" id="agregarDetalleTFDPasoEdit">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>
                                <div class="content-box-wrapper">
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.DerechosDePasos.TipoDerechoDePaso_Id, new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Mercancias.TransporteFerroviario.DerechosDePasos.TipoDerechoDePaso_Id, (IEnumerable<SelectListItem>)ViewBag.TipoDerechoPaso, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.DerechosDePasos.TipoDerechoDePaso_Id, "", new { @class = "text-danger" })
                                        <div id="TipoDerechosDePasoId" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.DerechosDePasos.KilometrajePagado, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.DerechosDePasos.KilometrajePagado, new { @class = "form-control datetime" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.DerechosDePasos.KilometrajePagado, "", new { @class = "text-danger" })
                                        <div id="KilPagado" style="color:red;"></div>
                                    </div>


                                    <div class="clearfix"></div>

                                    <div class="col-xs-12">
                                        <div class="content-box">
                                            <h3 class="content-box-header bg-default">
                                                <i class="glyph-icon icon-inbox"></i>
                                                Cantidades Derechos de Paso Agregados
                                                <span class="contadorTFDPasoEdit font-blue">

                                                </span>
                                            </h3>
                                            <div class="content-box-wrapper">
                                                <div>
                                                    <div class="row" id="detallesTFDPaso">
                                                        @if (Model.Mercancias.TransporteFerroviario != null)
                                                        {
                                                            if (Model.Mercancias.TransporteFerroviario.DerechosDePasoss != null)
                                                            {
                                                                foreach (var DerechosDePaso in Model.Mercancias.TransporteFerroviario.DerechosDePasoss)
                                                                {
                                                                    @Html.Partial("~/Views/ComplementosCartaPorte/DerechoDePasoEdit.cshtml", DerechosDePaso)
                                                                }
                                                            }
                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>


                            <h3 class="title-hero">
                                Carro
                            </h3>
                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Carro
                                    <div class="header-buttons-separator">
                                        <a href="#" class="icon-separator" id="agregarDetalleTFCarroEdit">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>
                                <div class="content-box-wrapper">
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.Carro.TipoCarro_Id, new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.Mercancias.TransporteFerroviario.Carro.TipoCarro_Id, (IEnumerable<SelectListItem>)ViewBag.TipoCarro_Id, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.Carro.TipoCarro_Id, "", new { @class = "text-danger" })
                                        <div id="TFTipoCarroID" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.Carro.MatriculaCarro, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.Carro.MatriculaCarro, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.Carro.MatriculaCarro, "", new { @class = "text-danger" })
                                        <div id="TFMatriculaCarro" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.Carro.GuiaCarro, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.Carro.GuiaCarro, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.Carro.GuiaCarro, "", new { @class = "text-danger" })
                                        <div id="TFGuiaCarro" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.Carro.ToneladasNetasCarro, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.Carro.ToneladasNetasCarro, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.Carro.ToneladasNetasCarro, "", new { @class = "text-danger" })
                                        <div id="TFTNetasCarro" style="color:red;"></div>
                                    </div>

                                    <div class="clearfix"></div>


                                    <h3 class="title-hero">
                                        ContenedorC
                                    </h3>
                                    <div class="content-box">
                                        <h3 class="content-box-header bg-blue">
                                            <i class="glyph-icon icon-cog"></i>
                                            Agregar ContenedorC
                                            <div class="header-buttons-separator">
                                                <a href="#" class="icon-separator" id="agregarDetalleTFContenedor">
                                                    <i class="glyph-icon icon-plus"></i>
                                                </a>
                                            </div>
                                        </h3>
                                        <div class="content-box-wrapper">
                                            <div class="form-group col-xs-12 col-sm-3">
                                                @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.Contenedor_Id, new { @class = "control-label" })
                                                @Html.DropDownListFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.Contenedor_Id, (IEnumerable<SelectListItem>)ViewBag.Contenedor_Id, new { @class = "form-control", @Id = "contenedorTransFerr" })
                                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.Contenedor_Id, "", new { @class = "text-danger" })
                                                <div id="MTFcontenedorId" style="color:red;"></div>
                                            </div>
                                            <div class="form-group col-xs-12 col-sm-3">
                                                @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.PesoContenedorVacio, new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.PesoContenedorVacio, new { @class = "form-control " })
                                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.PesoContenedorVacio, "", new { @class = "text-danger" })
                                                <div id="MTFPesoContenedorVacio" style="color:red;"></div>
                                            </div>
                                            <div class="form-group col-xs-12 col-sm-3">
                                                @Html.LabelFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.PesoNetoMercancia, new { @class = "control-label" })
                                                @Html.EditorFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.PesoNetoMercancia, new { @class = "form-control " })
                                                @Html.ValidationMessageFor(model => model.Mercancias.TransporteFerroviario.Carro.ContenedorC.PesoNetoMercancia, "", new { @class = "text-danger" })
                                                <div id="MTFPesoNetoMercancia" style="color:red;"></div>
                                            </div>


                                            <div class="clearfix"></div>

                                            <div class="col-xs-12">
                                                <div class="content-box">
                                                    <h3 class="content-box-header bg-default">
                                                        <i class="glyph-icon icon-inbox"></i>
                                                        ContenedoresC Agregados
                                                        <span class="contadorTFContenedor font-blue">

                                                        </span>
                                                    </h3>
                                                    <div class="content-box-wrapper">
                                                        <div>
                                                            <div class="row" id="detallesTFContenedor">
                                                                @if (Model.ContenedoresC != null)
                                                                {
                                                                    foreach (var ContenedoresC in Model.ContenedoresC)
                                                                    {
                                                                        @Html.Partial("~/Views/ComplementosCartaPorte/ContenedoresC.cshtml", ContenedoresC)
                                                                    }
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div><div class="clearfix"></div>
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="col-xs-12">
                                        <div class="content-box">
                                            <h3 class="content-box-header bg-default">
                                                <i class="glyph-icon icon-inbox"></i>
                                                Cantidades de Carros Agregados
                                                <span class="contadorTFCarroEdit font-blue">

                                                </span>
                                            </h3>
                                            <div class="content-box-wrapper">
                                                <div>
                                                    <div class="row" id="detallesTFCarro">
                                                        @if (Model.Mercancias.TransporteFerroviario != null)
                                                        {
                                                            if (Model.Mercancias.TransporteFerroviario.Carros != null)
                                                            {
                                                                foreach (var Carros in Model.Mercancias.TransporteFerroviario.Carros)
                                                                {
                                                                    @Html.Partial("~/Views/ComplementosCartaPorte/CarroEdit.cshtml", Carros)
                                                                }
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>


                                </div>
                                <div class="clearfix"></div>
                            </div>




                            <div class="clearfix"></div>

                        </div>
                        <div class="clearfix"></div>
                    </div>


                    <div class="clearfix"></div>
                    <div class="tab-pane" id="tab8">
                        <div class="row">
                            <div class="clearfix"></div>
                            <h3 class="title-hero">
                                Figura Transporte
                            </h3>
                            <div class="content-box">
                                <h3 class="content-box-header bg-blue">
                                    <i class="glyph-icon icon-cog"></i>
                                    Agregar Figura Transporte
                                    <div class="header-buttons-separator">
                                        <a href="#" class="icon-separator" id="agregarDetalleFTransporte">
                                            <i class="glyph-icon icon-plus"></i>
                                        </a>
                                    </div>
                                </h3>
                                <div class="content-box-wrapper">
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.TiposFigura.FiguraTransporte, new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.TiposFigura.FiguraTransporte, (IEnumerable<SelectListItem>)ViewBag.TipoFiguraTransporte, "Favor de hacer su selección", new { @class = "form-control", @id = "TipoFiguraTransporte" })
                                        @Html.ValidationMessageFor(model => Model.TiposFigura.FiguraTransporte, "", new { @class = "text-danger" })
                                        <div id="TFFiguraTransporte" style="color:red;"></div>
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.TiposFigura.RFCFigura, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.TiposFigura.RFCFigura, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.TiposFigura.RFCFigura, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.TiposFigura.NumLicencia, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.TiposFigura.NumLicencia, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.TiposFigura.NumLicencia, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.TiposFigura.NombreFigura, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.TiposFigura.NombreFigura, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.TiposFigura.NombreFigura, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.TiposFigura.NumRegIdTribFigura, new { @class = "control-label" })
                                        @Html.EditorFor(model => model.TiposFigura.NumRegIdTribFigura, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => Model.TiposFigura.NumRegIdTribFigura, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group col-xs-12 col-sm-3">
                                        @Html.LabelFor(model => model.TiposFigura.ResidenciaFiscalFigura, new { @class = "control-label" })
                                        @Html.EnumDropDownListSpecialFor(model => model.TiposFigura.ResidenciaFiscalFigura)
                                        @Html.ValidationMessageFor(model => Model.TiposFigura.ResidenciaFiscalFigura, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="clearfix"></div>
                                    <h3 class="title-hero">
                                        Figura Transporte: Domicilio
                                    </h3>
                                    @Html.Partial("~/Views/ComplementosCartaporte/Domicilio.cshtml", Model.TiposFigura.Domicilio, new ViewDataDictionary(ViewData) { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "TiposFigura.Domicilio" } })
                                    <div class="clearfix"></div>



                                    @*</div>*@

                                    <div class="row" @ActParteTransporte id="ActivaCampoPartesTransporte">
                                        <div class="clearfix"></div>
                                        <h3 class="title-hero">
                                            Partes Transporte
                                        </h3>
                                        <div class="content-box">
                                            <h3 class="content-box-header bg-blue">
                                                <i class="glyph-icon icon-cog"></i>
                                                Agregar Partes Transporte
                                                <div class="header-buttons-separator">
                                                    <a href="#" class="icon-separator" id="agregarDetallePTransporte">
                                                        <i class="glyph-icon icon-plus"></i>
                                                    </a>
                                                </div>
                                            </h3>
                                            <div class="content-box-wrapper">

                                                <div class="form-group col-xs-12 col-sm-3">

                                                    @Html.LabelFor(model => model.TiposFigura.PartesTransporte.ParteTransporte, new { @class = "control-label" })
                                                    @Html.EnumDropDownListSpecialFor(model => model.TiposFigura.PartesTransporte.ParteTransporte)
                                                    @Html.ValidationMessageFor(model => model.TiposFigura.PartesTransporte.ParteTransporte, "", new { @class = "text-danger" })
                                                    <div id="FTPartesTransporte" style="color:red;"></div>
                                                </div>

                                                <div class="clearfix"></div>


                                                <div class="col-xs-12">
                                                    <div class="content-box">
                                                        <h3 class="content-box-header bg-default">
                                                            <i class="glyph-icon icon-inbox"></i>
                                                            Partes Transporte Agregadas
                                                            <span class="contadorPTransporte font-blue">

                                                            </span>
                                                        </h3>
                                                        <div class="content-box-wrapper">
                                                            <div>
                                                                <div class="row" id="detallesPTransporte">
                                                                    @if (Model.TiposFigura.PartesTransportes != null)
                                                                    {

                                                                        foreach (var partesTransporte in Model.TiposFigura.PartesTransportes)
                                                                        {
                                                                            @Html.Partial("~/Views/ComplementosCartaPorte/PartesTransporte.cshtml", partesTransporte)
                                                                        }
                                                                    }
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="clearfix"></div>
                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="col-xs-12">
                                        <div class="content-box">
                                            <h3 class="content-box-header bg-default">
                                                <i class="glyph-icon icon-inbox"></i>
                                                Figura Transporte Agregadas
                                                <span class="contadorFTransporte font-blue">

                                                </span>
                                            </h3>
                                            <div class="content-box-wrapper">
                                                <div>
                                                    <div class="row" id="detallesFTransporte">
                                                        @if (Model.FiguraTransporte != null)
                                                        {
                                                            foreach (var Tiposfigura in Model.FiguraTransporte)
                                                            {

                                                                @Html.Partial("~/Views/ComplementosCartaPorte/FiguraTransporte.cshtml", Tiposfigura)
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>


                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </div>
                    @*<hr />*@

                    <div class="form-group pull-right">
                        <button type="button" class="btn btn-alt btn-hover btn-default" onclick="location.href='@Url.Action("Index")';">
                            <span>Regresar</span>
                            <i class="glyph-icon icon-arrow-left"></i>
                        </button>
                        <button type="submit" class="btn btn-alt btn-hover btn-blue-alt">
                            <span>Guardar</span>
                            <i class="glyph-icon icon-arrow-right"></i>
                        </button>
                    </div>
                </div>

            </div>

        }

    </div>
</div>

<script>

    $('.cfdiRelacionado').change(function () {
        if ($('.cfdiRelacionado').prop('checked')) {
            $('.cfdiRelacionadoSeccion').show(200);
            $('.cfdiRelacionadoSeccion').css('display', 'inline');
        } else {
            $('.cfdiRelacionadoSeccion').hide(200);
        }
    });

    //Detalle Ubicaciones
    $('#agregarDetalleUbicacion').click(function () {

            var contador = $(".ubicacion").size() + 1;
            $(".contadorUbicaciones").replaceWith('<span class="contadorUbicaciones font-blue">: ' + contador + '</span >');

    });

    function removeDetalleUbicacion(elem) {
        var totalU = $(".ubicacion").size();
        if (totalU > 0) {
            var contador = $(".ubicacion").size() - 1;
            $(".contadorUbicaciones").replaceWith('<span class="contadorUbicaciones font-blue">: ' + contador + '</span >');
        } else {
            $(".contadorUbicaciones").replaceWith('<span class="contadorUbicaciones font-blue">');
        }
        $(elem).parent().parent().parent().remove();
    }


    $("#agregarDetalleUbicacion").on('click', function () {
        var TU = false;
        var RR = false;
        var FHS = false;
        var P = false;
        var E = false;
        var CP = false;
        var message;
        var ORTipoUbicacion = $('#TipoUbicacionRD').val();
            message ="#TipoUbicacion"
            TU = Boolean(ValidaCampos(ORTipoUbicacion,message));
        var ORRFCRemitente = $('#Ubicacion_RfcRemitenteDestinatario').val();
            message = "#RfcRemitente"
            RR = Boolean(ValidaCampos(ORRFCRemitente, message));
        var FechaHoraSalida = $('#Ubicacion_FechaHoraSalidaLlegada').val();
        console.log(FechaHoraSalida);
            message="#FechaHoraSalida"
        FHS = Boolean(ValidaCampos(FechaHoraSalida, message));
        var ORPais = $("#Ubicacion_Domicilio_Paises").val();
        message = "#UPais"
        var ORPaisText = $("#Ubicacion_Domicilio_Paises option:selected").text();

        P = Boolean(ValidaCampos(ORPais, message));
        //se toman valores de  campos de select o input
        var OREstado = $('#Ubicacion_Domicilio_ddlEstados option:selected').val();
        var OREstadoText = $('#Ubicacion_Domicilio_ddlEstados option:selected').text();
        message = "#UEstado"
        E = Boolean(ValidaCampos(OREstado, message));
        if (!E) {
            OREstado = $('#Ubicacion_Domicilio_Estado').val();
            OREstadoText = OREstado;
            message = "#UEstado"
            E = Boolean(ValidaCampos(OREstado, message));
        }

        var DEMunicipio = $('#Ubicacion_Domicilio_ddlMunicipios option:selected').val();
        var DEMunicipioText = $('#Ubicacion_Domicilio_ddlMunicipios option:selected').text();
        message = ""
        var ddlM = Boolean(ValidaCampos(DEMunicipio, message));
        if (!ddlM) {
            DEMunicipio = $('#Ubicacion_Domicilio_Municipio').val();
            DEMunicipioText = DEMunicipio;
        }
        var DELocalidad = $('#Ubicacion_Domicilio_ddlLocalidades option:selected').val();
        var DELocalidadText = $('#Ubicacion_Domicilio_ddlLocalidades option:selected').text();
        message = ""
        var ddlL = Boolean(ValidaCampos(DELocalidad, message));
        if (!ddlL) {
            DELocalidad = $('#Ubicacion_Domicilio_Localidad').val();
            DELocalidadText = DELocalidad;
        }
        var DEColonia = $('#Ubicacion_Domicilio_ddlColonias option:selected').val();
        var DEColoniaText = $('#Ubicacion_Domicilio_ddlColonias option:selected').text();
        message = ""
        var ddlC = Boolean(ValidaCampos(DEColonia, message));
        if (!ddlC) {
            DEColonia = $('#Ubicacion_Domicilio_Colonia').val();
            DEColoniaText = DEColonia;
        }
        //
        var ORCodigoPostal = $('#Ubicacion_Domicilio_CodigoPostal').val();
            message = "#UCodigoPostal"
            CP = Boolean(ValidaCampos(ORCodigoPostal, message));
        if (!RR || !TU || !FHS || !E || !CP || !P) {

        } else {


        var ORNE = "";
        var NumEsta = "";
            if ($("#DivEstacionMaritimo").is(":visible")) {
                ORNE = $('#NombreEstacionMaritimo option:selected').text();
                NumEsta = $('#NombreEstacionMaritimo option:selected').val();
        }
        if ($("#DivEstacionAereo").is(":visible")) {
            ORNE = $('#NombreEstacionAereo option:selected').text();
            NumEsta = $('#NombreEstacionAereo option:selected').val();

        }
            if ($("#DivEstacionFerroviario").is(":visible")) {
                ORNE = $('#NombreEstacionFerroviario option:selected').text();
                NumEsta = $('#NombreEstacionFerroviario option:selected').val();

            }
            var clave="";
            var randomClave = Math.floor(100000 + Math.random() * 900000);
            if ($('#TipoUbicacionRD').val() === "Origen") { clave = "OR" + randomClave; } else { clave = "DE" + randomClave }
        $.ajax({
            type: 'POST',
            url: ' @Url.Action("AgregarUbicacion", "AjaxOperaciones")',
            data: JSON.stringify({
                TipoUbicacion: $('#TipoUbicacionRD').val(),
                TipoEstacion: $('#UTipoEstacion option:selected').text(),
                TipoEstacionId: $('#UTipoEstacion option:selected').val(),//id =Ubicacion_ORTipoEstacion
                IdUbicacion: $('#Ubicacion_IDUbicacion').val(),
                RFCRemitenteDestinatario: $('#Ubicacion_RfcRemitenteDestinatario').val(),
                NombreRemitenteDestinatario: $('#Ubicacion_NombreRemitenteDestinatario').val(),
                NumRegIdTrib: $('#Ubicacion_NumRegIdTrib').val(),
                ResidenciaFiscal: $('#Ubicacion_ResidenciaFiscal').val(),
                NombreEstacion: ORNE,
                NumEstacion: NumEsta,
                NavegacionTrafico: $('#Ubicacion_NavegacionTrafico').val(),
                FechaHoraSalidaLlegada: $('#Ubicacion_FechaHoraSalidaLlegada').val(),
                DistanciaRecorrida: $('#DistanciaRO').val(),
                Calle: $('#Ubicacion_Domicilio_Calle').val(),
                CodigoPostal: $('#Ubicacion_Domicilio_CodigoPostal').val(),
                Colonia: DEColonia,
                ColoniaText: DEColoniaText,
                Estado: OREstado,
                EstadoText: OREstadoText,
                Localidad: DELocalidad,
                LocalidadText: DELocalidadText,
                Municipio: DEMunicipio,
                MunicipioText: DEMunicipioText,
                NumeroExterior: $('#Ubicacion_Domicilio_NumeroExterior').val(),
                NumeroInterior: $('#Ubicacion_Domicilio_NumeroInterior').val(),
                Pais: ORPais,
                PaisText: ORPaisText,
                Referencia: $('#Ubicacion_Domicilio_Referencia').val()
            }),
            dataType: 'html',
            contentType: "application/json; charset=utf-8",
        }).success(function (partialView) {
            $('#Ubicacion_IDUbicacion').val(clave);
            $('#detalleUbicaciones').append(partialView);
        })
            .fail(function (jqxhr, textStatus, error) {
                alert("Favor de llenar todos los datos para los detalles");
            });
        return false;
    }
        });

    $('#claveTransporteId').change(function () {
        var ClaveTransporteId = $(this).val();

        switch (ClaveTransporteId) {
            case "02":
                $('#DivEstacionMaritimo').show();
                $('#DivEstacionAereo').hide();
                $('#DivEstacionFerroviario').hide();
                $('#DivNumEstacion').show();
                $('#NumEstacion').val('');
                $('#DivEstacionMaritimoD').show();
                $('#DivEstacionAereoD').hide();
                $('#DivEstacionFerroviarioD').hide();
                $('#DivNumEstacionD').show();
                $('#NumEstacionD').val('');
                $('#TransporteMaritimo').show();
                $('#TransporteAereo').hide();
                $('#TransporteFerroviario').hide();
                $('#DivAutotransporte').hide();
                $('#TotalDistRec').hide();
                $('.activaTipoEstacion').show();
                $('#ActivaDimensiones').hide();
                $('#DivNavegacionTrafico').show();
                $('#activaMercPeso').show();
                //$('.DivDetalleMercancia').show();
                $('#DivCargoTasacion').hide();
                //$(".pesoBrutoTotalD").attr('disabled', 'disabled');
                $(".activaClaveSTCC").hide();
                //$('.DivCantidadTransportada').hide(200);
                break;
            case "03":
                $('#DivEstacionMaritimo').hide();
                $('#DivEstacionAereo').show();
                $('#DivEstacionFerroviario').hide();
                $('#DivNumEstacion').show();
                $('#NumEstacion').val('');
                $('#DivEstacionMaritimoD').hide();
                $('#DivEstacionAereoD').show();
                $('#DivEstacionFerroviarioD').hide();
                $('#DivNumEstacionD').show();
                $('#NumEstacionD').val('');
                $('#TransporteAereo').show();
                $('#TransporteMaritimo').hide();
                $('#TransporteFerroviario').hide();
                $('#DivAutotransporte').hide();
                $('#TotalDistRec').hide();
                $('.activaTipoEstacion').show();
                $('#ActivaDimensiones').show();
                $('#DivNavegacionTrafico').hide();
                $('#activaMercPeso').hide();
               // $('.DivDetalleMercancia').hide();
                $('#DivCargoTasacion').show();
               // $(".pesoBrutoTotalD").removeAttr('disabled');
                $(".activaClaveSTCC").hide();
                break;
            case "04":
                $('#DivEstacionMaritimo').hide();
                $('#DivEstacionAereo').hide();
                $('#DivEstacionFerroviario').show();
                $('#DivNumEstacion').show();
                $('#NumEstacion').val('');
                $('#DivEstacionMaritimoD').hide();
                $('#DivEstacionAereoD').hide();
                $('#DivEstacionFerroviarioD').show();
                $('#DivNumEstacionD').show();
                $('#NumEstacionD').val('');
                $('#TransporteFerroviario').show();
                $('#TransporteMaritimo').hide();
                $('#TransporteAereo').hide();
                $('#DivAutotransporte').hide();
                $('#TotalDistRec').show();
                $('.activaTipoEstacion').show();
                $('#ActivaDimensiones').hide();
                $('#DivNavegacionTrafico').hide();
                $('#activaMercPeso').show();
                //$('.DivDetalleMercancia').show();
                $('#DivCargoTasacion').hide();
                //$(".pesoBrutoTotalD").attr('disabled', 'disabled');
                $(".activaClaveSTCC").show();
                //$('.DivCantidadTransportada').show();
                break;
            case "05":
                $('#DivEstacionMaritimo').hide();
                $('#DivEstacionAereo').hide();
                $('#DivEstacionFerroviario').hide();
                $('#DivNumEstacion').hide();
                $('#NumEstacion').val('');
                $('#DivEstacionMaritimoD').hide();
                $('#DivEstacionAereoD').hide();
                $('#DivEstacionFerroviarioD').hide();
                $('#DivNumEstacionD').hide();
                $('#NumEstacionD').val('');
                $('#TransporteFerroviario').hide();
                $('#TransporteMaritimo').hide();
                $('#TransporteAereo').hide();
                $('#DivAutotransporte').hide();
                $('#TotalDistRec').hide();
                $('.activaTipoEstacion').hide();
                $('#ActivaDimensiones').hide();
                $('#DivNavegacionTrafico').hide();
                $('#activaMercPeso').hide();
               // $('.DivDetalleMercancia').hide();
                $('#DivCargoTasacion').hide();
                //$(".pesoBrutoTotalD").attr('disabled', 'disabled');
                $(".activaClaveSTCC").hide();
               // $('.DivCantidadTransportada').hide();
                break;
            default:
                $('#DivEstacionMaritimo').hide();
                $('#DivEstacionAereo').hide();
                $('#DivEstacionFerroviario').hide();
                $('#DivNumEstacion').hide();
                $('#NumEstacion').val('');
                $('#DivEstacionMaritimoD').hide();
                $('#DivEstacionAereoD').hide();
                $('#DivEstacionFerroviarioD').hide();
                $('#DivNumEstacionD').hide();
                $('#NumEstacionD').val('');
                $('#DivAutotransporte').show();
                $('#TransporteMaritimo').hide();
                $('#TransporteAereo').hide();
                $('#TransporteFerroviario').hide();
                $('#TotalDistRec').show();
                $('.activaTipoEstacion').hide();
                $('#ActivaDimensiones').show();
                $('#DivNavegacionTrafico').hide();
                $('#activaMercPeso').hide();
               // $('.DivDetalleMercancia').hide();
                $('#DivCargoTasacion').hide();
                //$(".pesoBrutoTotalD").removeAttr('disabled');
                $(".activaClaveSTCC").hide();
        }

    });

    $('#ReceptorId').change(function () {
        var ReceptorId = $(this).val();
        $.get("/ComplementosCartaPorte/DatosCliente", { ClienteId: ReceptorId }, function (data) {
            $.each(data, function (index, row) {
                $("#Ubicacion_UbicacionDestino_RfcDestinatario").val(row.Item1)
                    * $('#Ubicacion_UbicacionDestino_RfcDestinatario').attr("disabled", "disabled")
                $("#Ubicacion_UbicacionDestino_NombreDestinatario").val(row.Item2)
                    * $('#Ubicacion_UbicacionDestino_NombreDestinatario').attr("disabled", "disabled")
                $("#Ubicacion_UbicacionDestino_ResidenciaFiscal").val(row.Item3)
                    * $('#Ubicacion_UbicacionDestino_ResidenciaFiscal').attr("disabled", "disabled")
            });
        });
    });

    $('.NombreEstacion').change(function () {
        var ClaveEstacion = $(this).val();
        $('#NumEstacion').val(ClaveEstacion);
    });

    $('.NombreEstacionD').change(function () {
        var ClaveEstacion = $(this).val();
        $('#NumEstacionD').val(ClaveEstacion);
    });

    $(".ddlPaisesChange").change(function () {
        var Paises = "#"+$(this).attr('id');
        var Seccion = Paises.replace('Paises', '');

        var ddlEstados = Seccion + "ddlEstados";

        var ddlMunicipios = Seccion + "ddlMunicipios";
        var ddlLocalidades = Seccion + "ddlLocalidades";
        var ddlColonias = Seccion + "ddlColonias";
        var tbEstados = Seccion + "Estado";
        var tbMunicipios = Seccion + "Municipio";
        var tbLocalidades = Seccion + "Localidad";
        var tbColonias = Seccion + "Colonia";

        if ($(Paises).val() == "MEX" || $(Paises).val() == "USA" || $(Paises).val() == "CAN") {
            $.get("/ComplementosCartaPorte/FiltrarEstados", { PaisId: $(Paises).val() }, function (data) {
                LimpiartbCamposget($(tbEstados));
                LimpiartbCamposget($(tbMunicipios));
                LimpiartbCamposget($(tbLocalidades));
                //LimpiartbCamposget($("#tbCodigosPostales"));
                LimpiartbCamposget($(tbColonias));

                LimpiarddlCamposget($(ddlEstados));
                LimpiarddlCamposget($(ddlMunicipios));
                LimpiarddlCamposget($(ddlLocalidades));
                //LimpiarddlCamposget($("#ddlCodigosPostales"));
                LimpiarddlCamposget($(ddlColonias));


                $(ddlEstados).empty();
                $(ddlEstados).removeClass('hidden');

                $(ddlEstados).append("<option value> Seleccionar Estados de " + $(Paises+" option:selected").text() + "</option>")
                $.each(data, function (index, row) {
                    $(ddlEstados).append("<option value='" + row.c_Estado + "'>" + row.NombreEstado + "</option>")
                });
                $(ddlEstados).removeAttr('disabled');
                $(ddlEstados).selectpicker('refresh');
            });
        }
        else {
            LimpiarddlCampos($(ddlEstados));
            LimpiartbCampos($(tbEstados));
            LimpiarddlCampos($(ddlMunicipios));
            LimpiartbCampos($(tbMunicipios));
            LimpiarddlCampos($(ddlLocalidades));
            LimpiartbCampos($(tbLocalidades));
            //LimpiarddlCampos($("#ddlCodigosPostales"))
            //LimpiartbCampos($("#tbCodigosPostales"));
            LimpiarddlCampos($(ddlColonias));
            LimpiartbCampos($(tbColonias));
        }
    });

    $('.ddlEstadosChange').change(function () {
        var ddlEstados = "#" + $(this).attr('id');
        var Seccion = ddlEstados.replace('ddlEstados', '');
        var Paises = Seccion + "Paises";
        var ddlMunicipios = Seccion + "ddlMunicipios";
        var ddlLocalidades = Seccion + "ddlLocalidades";
        var ddlColonias = Seccion + "ddlColonias";
        var tbEstados = Seccion + "Estado";
        var tbMunicipios = Seccion + "Municipio";
        var tbLocalidades = Seccion + "Localidad";
        var tbColonias = Seccion + "Colonia";
        var tbCodigosPostales = Seccion + "CodigoPostal";
        if ($(Paises).val() == "MEX") {
            LimpiartbCamposget($(tbMunicipios));
            LimpiartbCamposget($(tbLocalidades));
            //LimpiartbCamposget($("#tbCodigosPostales"));
            LimpiartbCamposget($(tbColonias));

            LimpiarddlCamposget($(ddlMunicipios));
            LimpiarddlCamposget($(ddlLocalidades));
            //LimpiarddlCamposget($("#ddlCodigosPostales"));
            LimpiarddlCamposget($(ddlColonias));
            $.get("/ComplementosCartaPorte/FiltrarMunicipios", { EstadoId: $(ddlEstados).val() }, function (data) {
                $(ddlMunicipios).empty();
                //$("#ddlMunicipios").removeClass('hidden');

                //$("#ddlMunicipios").append("<option value> Seleccionar Municipio de " + $("#ddlEstado option:selected").text() + "</option>")
                $.each(data, function (index, row) {
                    $(ddlMunicipios).append("<option value='" + row.c_Municipio + "'>" + row.Descripcion + "</option>")
                });
                $(ddlMunicipios).removeAttr('disabled');
                $(ddlMunicipios).selectpicker('refresh');
            });
            $.get("/ComplementosCartaPorte/FiltrarLocalidades", { EstadoId: $(ddlEstados).val() }, function (data) {

                $(ddlLocalidades).empty();
                $.each(data, function (index, row) {
                    $(ddlLocalidades).append("<option value='" + row.c_Localidad + "'>" + row.Descripcion + "</option>")
                });
                $(ddlLocalidades).removeAttr('disabled');
                $(ddlLocalidades).selectpicker('refresh');
            });
        }
        else {
            LimpiarddlCampos($(ddlMunicipios));
            LimpiartbCampos($(tbMunicipios));
            LimpiarddlCampos($(ddlLocalidades));
            LimpiartbCampos($(tbLocalidades));
            //LimpiarddlCampos($("#ddlCodigosPostales"))
            //LimpiartbCampos($(tbCodigosPostales));
            LimpiarddlCampos($(ddlColonias))
            LimpiartbCampos($(tbColonias));
        }
    });

    $('.CodigosPostalesChange').keyup(function (e) {
        let timeout = null;
        clearTimeout(timeout);
        var tbCodigosPostales = "#" + $(this).attr('id');
        var Seccion = tbCodigosPostales.replace('CodigoPostal', '');
        var Paises = Seccion + "Paises";
        var ddlColonias = Seccion + "ddlColonias";

        // Make a new timeout set to go off in 1000ms (1 second)
        timeout = setTimeout(function () {
            if ($(Paises).val() == "MEX") {
                $.get("/ComplementosCartaPorte/FiltrarColonias", { CodigoPostalId: $(tbCodigosPostales).val() }, function (data) {
                    $(ddlColonias).empty();
                    $.each(data, function (index, row) {
                        $(ddlColonias).append("<option value='" + row.c_Colonia + "'>" + row.Nombreasentamiento + "</option>")
                    });
                    $(ddlColonias).removeAttr('disabled');
                    $(ddlColonias).selectpicker('refresh');
                });
            }
            else {

            }
        }, 1000);

    });

    function LimpiartbCamposget(tb) {
        tb.val('');
        tb.addClass('hidden');
        //tb.selectpicker('refresh');
    }

    function LimpiarddlCamposget(ddl) {
        ddl.empty();
        ddl.attr("disabled", "disabled");
        ddl.removeClass("hidden");
        ddl.parent().removeClass("hidden");
        //ddl.parent().attr("disabled", "disabled");
        ddl.selectpicker('refresh');
    }

    function LimpiartbCampos(tb) {
        tb.val('');
        tb.removeClass("hidden");
        nombre = tb.attr('name');
        tb.attr("placeholder", "Ingrese " + nombre);

        //tb.attr("placeholder", "Ingrese " + nombre + " del municipio de " + $("#ddlPaises option:selected").text());
        tb.selectpicker('refresh');
    }

    function LimpiarddlCampos(ddl) {
        ddl.empty();
        ddl.attr("disabled", "disabled");
        ddl.addClass('hidden');
        ddl.selectpicker('refresh');
    }

           $("#tipoComprobante").change(function () {
            if ($(this).val() === "T") {
                /*$('#subtotal').attr("disabled", "disabled")*/
                $('#validaTipoComprobante').hide(200);
                $('#validaClaveTransporte').hide(200);
                $('#activaImpuesto').hide(200);

                //$('#claveTransporte').val("0.00");
                $('#subtotal').val("0.00");
                $('#total').val("0.00");
            } else {
                //$('#subtotal').removeAttr("disabled");
                $('#validaTipoComprobante').show();
                $('#validaClaveTransporte').show();
                $('#activaImpuesto').show(200);
                $('#subtotal').val("0.00");
                $('#total').val("0.00");
            }
           });
    //Total distanciaRecorrida Origen y Destino
   /*$('#DistanciaRO').on("keyup", function () {
        var DROrigen;
        var TotalDR;

        var Total;
        if ($('#DistanciaRO').val() > 0 ) {
            DROrigen = parseFloat($('#DistanciaRO').val());
            TotalDR = parseFloat($('#TotalDistRecorridas').val());
            console.log(TotalDR);
            console.log(DROrigen);
            if ($('#DistanciaRO').val() === "") {
                DROrigen = 0;

            }
            if (TotalDR === "") {
                TotalDR = 0;
            }
            Total = DROrigen 

            $('#TotalDistRecorridas').val(Total);
        } else {
            $('#TotalDistRecorridas').val(0);
        }
    });*/
    /*$('#DistanciaRD').on("keyup", function () {
        var DROrigen;
        var DRDestino;
        var Total;
        if ($('#DistanciaRD').val() > 0 || $('#DistanciaRO').val() > 0) {
            DROrigen = parseFloat($('#DistanciaRO').val());
            DRDestino = parseFloat($('#DistanciaRD').val());
            if ($('#DistanciaRO').val() === "") {
                DROrigen = 0;

            }
            if ($('#DistanciaRD').val() === "") {
                DRDestino = 0;
            }

            Total = DROrigen + DRDestino;
            $('#TotalDistRecorridas').val(Total);
        } else {
            $('#TotalDistRecorridas').val(0);
        }
    });*/

    //Total de impuesto Trasladado y Retenido
    $('#TTasaOCuota').on("keyup", function () {
        if ($('#TTasaOCuota').val() > 0) {
            
            var TBase = parseFloat($('#TBase').val());
            var TTasaOCuota = parseFloat($('#TTasaOCuota').val());
            if ($('#TBase').val() === "") {
                TBase = 0;

            }
            if ($('#TTasaOCuota').val() === "") {
                TTasaOCuota = 0;
            }

            Total = TBase * TTasaOCuota;
            
            $('#TImporte').val(Total);
        } else {
            
            $('#TImporte').val(0);
        }
    });
    /*$('#TBase').on("keyup", function () {
        if ($('#TBase').val() > 0 && $('#TTasaOCuota').val()) {
            var TBase = parseFloat($('#TBase').val());
            var TTasaOCuota = parseFloat($('#TTasaOCuota').val());
            if ($('#TBase').val() === "") {
                TBase = 0;

            }
            if ($('#TTasaOCuota').val() === "") {
                TTasaOCuota = 0;
            }

            Total = TBase * TTasaOCuota;
            $('#TTotal').val(Total);
            $('#TImporte').val(Total);
        } else {
            $('#TTotal').val(0);
            $('#TImporte').val(0);
        }
    });*/
    $('#RTasaOCuota').on("keyup", function () {
        if ($('#RTasaOCuota').val() > 0) {
            var TBase = parseFloat($('#RBase').val());
            var TTasaOCuota = parseFloat($('#RTasaOCuota').val());
            if ($('#RBase').val() === "") {
                TBase = 0;

            }
            if ($('#RTasaOCuota').val() === "") {
                TTasaOCuota = 0;
            }

            Total = TBase * TTasaOCuota;
            
            $('#RImporte').val(Total);
        } else {
            
            $('#RImporte').val(0);
        }
    });
    /*$('#RBase').on("keyup", function () {
        if ($('#RTasaOCuota').val() > 0 && $('#RBase').val() > 0) {
            var TBase = parseFloat($('#RBase').val());
            var TTasaOCuota = parseFloat($('#RTasaOCuota').val());
            if ($('#RBase').val() === "") {
                TBase = 0;

            }
            if ($('#RTasaOCuota').val() === "") {
                TTasaOCuota = 0;
            }

            Total = TBase * TTasaOCuota;
            $('#RTotal').val(Total);
            $('#RImporte').val(Total);
        } else {
            $('#RTotal').val(0);
            $('#RImporte').val(0);
        }
    });*/
    //Agrega subtotal a base de impuestos
    /*$('#subtotal').on("keyup", function () {
        if ($('#subtotal').val() > 0) {
            $('#TBase').val($('#subtotal').val());
            $('#RBase').val($('#subtotal').val());
        } else {
            $('#TBase').val(0);
            $('#RBase').val(0);
        }
    });*/

    //valida tipo de ubicación
    $('#TipoUbicacionRD').change(function () {
        var TipoUbicacionRD = $(this).val();
        var clave = "";
        var randomClave = Math.floor(100000 + Math.random() * 900000);

        if (TipoUbicacionRD == "Origen") {
            $('.origenTitulo').show(200);
            $('.origenDomicilio').show(200);
            $('.destinoTitulo').hide(200);
            $('.destinoDomicilio').hide(200);
            $('#Ubicacion_IDUbicacion').val("OR");
            $('.activaDR').hide(200);
            clave = "OR" + randomClave;
            $('#Ubicacion_IDUbicacion').val(clave);
        } else {
            $('.destinoTitulo').show(200);
            $('.destinoDomicilio').show(200);
            $('.origenTitulo').hide(200);
            $('.origenDomicilio').hide(200);
            $('#Ubicacion_IDUbicacion').val("DE");
            $('.activaDR').show(200);
            clave = "DE" + randomClave
            $('#Ubicacion_IDUbicacion').val(clave);
        }

    });

    //Activa campos RFC extranjero
    $('#Ubicacion_RfcRemitenteDestinatario').on("keyup", function () {
        if ($('#Ubicacion_RfcRemitenteDestinatario').val() === "XEXX010101000") {
            $('.activaCamposRFCExtranjero').show(200);
        } else {
            $('.activaCamposRFCExtranjero').hide(200);
        }
    });

    $(function () {
        $("#tipoComprobante").change(function () {
            if ($(this).val() === "I") {
                alert('Si el tipo de comprobante es I(Ingreso) agregar Nuevo  Rfc receptor y usoCFDI');
            }
        });
    });
    $("#FormaPago").selectpicker('val', $("#IdFormaPago").val());
    if ($("#IdTipoRelacion").val() != "") {
        $("#TipoRelacion").selectpicker('val', $("#IdTipoRelacion").val());
    }
</script>

