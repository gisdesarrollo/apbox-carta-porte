@model API.Catalogos.Grupo

@{
    ViewBag.Title = "Eliminar";
}

<h3 class="alert alert-danger">¿Está seguro que desea eliminar este registro?</h3>

<div class="container-fluid">
    <div class="row deshabilitar">
        <div class="col-xs-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title">
                        <div class="title"><b>@ViewBag.Title</b></div>
                    </div>
                </div>
                <div class="card-body">

                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        @Html.HiddenFor(model => model.Id)
                    <div class="form">
                        @Html.ValidationSummary(true, "", new { @class = "label-blue-alt" })

                        <div class="clearfix"></div>

                        <div class="sub-title">
                            <span class="fa fa-bars text-muted"></span> Información
                        </div>

                        <hr />


                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.LabelFor(model => model.Llave, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Llave, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Llave, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label" })
                            @Html.EnumDropDownListFor(model => model.Status, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>

                        <div class="clearfix"></div>

                        <div class="sub-title">
                            <span class="fa fa-bars text-muted"></span> Configuraciones
                        </div>

                        <hr />

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.ObtencionFtp, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ObtencionFtp, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.ObtencionFtp, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.CargaPdf, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.CargaPdf, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.CargaPdf, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.AutorizacionAutomaticaViajes, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AutorizacionAutomaticaViajes, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.AutorizacionAutomaticaViajes, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.AutorizacionAutomaticaSolicitudes, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.AutorizacionAutomaticaSolicitudes, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.AutorizacionAutomaticaSolicitudes, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.GastosViajes, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.GastosViajes, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.GastosViajes, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.GastosProveedores, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.GastosProveedores, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.GastosProveedores, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3">
                            @Html.LabelFor(model => model.ComplementosPagos, htmlAttributes: new { @class = "control-label" })
                            <div class="checkbox">
                                @Html.EditorFor(model => model.ComplementosPagos, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.ComplementosPagos, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="clearfix"></div>

                        <div class="sub-title">
                            <span class="fa fa-bars text-muted"></span> Notas
                        </div>

                        <hr />

                        <div class="form-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
                            @Html.LabelFor(model => model.Notas, htmlAttributes: new { @class = "control-label" })
                            @Html.TextAreaFor(model => model.Notas, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Notas, "", new { @class = "text-danger" })
                        </div>

                        <div class="clearfix"></div>
                        <hr />
                        <div class="form-group col-xs-12 col-sm-6 col-md-4 col-lg-3 pull-right">
                            @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-primary" })
                            <button type="submit" class="btn btn-success">Eliminar</button>
                        </div>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>